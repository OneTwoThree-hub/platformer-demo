// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level0":
            case "level3":return tiles.createTilemap(hex`3c000900000202020202020202000202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206040001010101010100000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010107040101010101010100010101010101010101010001010101010100010101010101010101010101010101010101010101010101010101010101010107040100010100000101010101010101010000000007020401010100000001010101010101010101010101010101010101010101010101010101010107040101000000000101010100000001010700000107010400010100000101010101010101010101010101010101010101010101010101010101010107040101000001010101010000000004010701040100000000010101010101010101010101010101010101010101010101010101010101010101010107000101010101010107020001070000010701040100000001010101010101010101010101010101010101010101010101010101010101010101010105000002020202020307010401070000000001040107010405020202020202020202020202020202020202020202020202020202020202020202020202000000080808080000080808000008080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808`, img`
222222222222222222222222222222222222222222222222222222222222
2..........................................................2
2..........................................................2
2....................2.....................................2
2................2...2.....................................2
2............2...2...2.....................................2
2........2...2...2...2.....................................2
2222222..2...2...2...2..222222222222222222222222222222222222
......2..2...2...2...2..2...................................
`, [myTiles.transparency16,sprites.builtin.forestTiles10,sprites.builtin.forestTiles6,sprites.builtin.forestTiles13,sprites.builtin.forestTiles9,sprites.builtin.forestTiles15,sprites.builtin.forestTiles7,sprites.builtin.forestTiles11,sprites.dungeon.hazardLava1], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`3c`, img`
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
`, [myTiles.transparency16,sprites.builtin.brick,myTiles.tile1,myTiles.tile2], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`500009000606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020203030303030303090a0303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030c0b`, img`
22222222222222222222222222222222222222222222222222222222222222222222222222222222
2..............................................................................2
2..............................................................................2
2..............................................................................2
2..............................................................................2
2..............................................................................2
2..............................................................................2
22222222222222222222222222222222222222222222222222222222222222222222222222222222
................................................................................
`, [myTiles.transparency16,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile3,myTiles.tile10,myTiles.tile2,myTiles.tile8,myTiles.tile9,myTiles.tile11,myTiles.tile12,myTiles.tile13,myTiles.tile15], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "carpet":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile7":
            case "tile9":return tile9;
            case "carpetBottom":
            case "tile3":return tile3;
            case "carpetTop":
            case "tile10":return tile10;
            case "myTile1":
            case "tile11":return tile11;
            case "myTile2":
            case "tile12":return tile12;
            case "myTile8":
            case "tile13":return tile13;
            case "myTile10":
            case "tile15":return tile15;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
